#Versão do Compose
version: '3'

#Configura as redes privadas e os containers que fazem parte das memas
networks: 
    app-network: #Rede privada nome: app-network
        driver: bridge #Tipo de rede - Nesse caso, ela terá resolução de nomes pois não é a rede bridge padrão do docker

#Serviços que serão levantados
services: 
    db:
        image: mysql:5.7
        command: --innodb-use-native-aio=0
        container_name: db
        restart: always
        tty: true
        ports:
            - "3306:3306"
        environment: #Variáveis de ambiente da imagem
            - MYSQL_DATABASE=laravel
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_USER=root
        networks: #Rede no qual o container está inserido e que pode comunicar com outros containers
            - app-network  
        volumes: #Volume compartilhado, usado para guarda o BD
            - /home/gabriel/docker/.docker/mysql:/var/lib/mysql 
        
            
    app:
        build: .docker/laravel #Diretorio do dockerfile para criação da imagem 
        container_name: app
        #depends_on: #Mostra quais serviços devem ser iniciados antes desse
            #- db
            #- redis
        tty: true #Terminal Virtual habilitado
        volumes: #Volume compartilhado, onde está o código fonte da aplicação
            - /home/gabriel/docker/.docker/laravel/laravel:/var/www/
        ports: #Redirecionamento das portas (host:container)
            - "9000:9000"
        networks: #Rede no qual o container está inserido e que pode comunicar com outros containers
            - app-network
        #Comando que será chamado quando o container subir
        #entrypoint: dockerize -wait tcp://db:3306 -timeout 40s ./.docker/laravel/entrypoint.sh
    nginx:
        build: .docker/nginx #Diretorio do dockerfile para criação da imagem
        container_name: nginx
        depends_on: #Mostra quais serviços devem ser iniciados antes desse
            - app
        restart: always
        tty: true #Terminal Virtual habilitado
        ports: #Redirecionamento das portas (host:container)
            - "8000:80"
        volumes: #Volume compartilhado, onde está o código fonte da aplicação
            - /home/gabriel/docker/.docker/laravel/laravel:/var/www/
        networks: #Rede no qual o container está inserido e que pode comunicar com outros containers
            - app-network
        #Comando que será chamado quando o container subir
        #entrypoint: dockerize -wait tcp://app:9000 -timeout 120s
    redis:
        image: redis:alpine #Imagem direto do repositório
        container_name: redis
        expose: #Expõe a porta do container para que o host tenha acesso
            - 6379
        networks: #Rede no qual o container está inserido e que pode comunicar com outros containers
            - app-network
    

